(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{228:function(t,s,a){},314:function(t,s,a){t.exports=a.p+"assets/img/1.1e5a598c.png"},315:function(t,s,a){t.exports=a.p+"assets/img/2.1b85cfb6.png"},316:function(t,s,a){"use strict";a(228)},355:function(t,s,a){"use strict";a.r(s);var e=[function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"vue-面试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-面试"}},[t._v("#")]),t._v(" vue 面试")]),t._v(" "),e("h2",{attrs:{id:"_1、mvvm-相关问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、mvvm-相关问题"}},[t._v("#")]),t._v(" 1、MVVM 相关问题?")]),t._v(" "),e("h3",{attrs:{id:"_1、mvvm-讲一下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、mvvm-讲一下"}},[t._v("#")]),t._v(" 1、MVVM 讲一下?")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("M - Model")]),t._v("，代表数据模型，用来定义数据修改和操作的业务逻辑。")]),t._v(" "),e("li",[e("code",[t._v("V - View")]),t._v("，代表 "),e("code",[t._v("UI")]),t._v(" 组件，它负责将数据模型转化为 "),e("code",[t._v("UI")]),t._v(" 展示出来。")]),t._v(" "),e("li",[e("code",[t._v("VM - ViewModel")]),t._v("，监听数据模型的改变和控制视图行为，简单理解就是一个同步 "),e("code",[t._v("View")]),t._v(" 和 "),e("code",[t._v("Model")]),t._v(" 的对象，连接 "),e("code",[t._v("View")]),t._v(" 和 "),e("code",[t._v("Model")]),t._v("。")])]),t._v(" "),e("h3",{attrs:{id:"_2、mvvm-响应式数据更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、mvvm-响应式数据更新"}},[t._v("#")]),t._v(" 2、MVVM 响应式数据更新?")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("View")]),t._v(" 接收用户交互请求。")]),t._v(" "),e("li",[e("code",[t._v("View")]),t._v(" 将请求转交给 "),e("code",[t._v("ViewModel")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("ViewModel")]),t._v(" 操作 "),e("code",[t._v("Model")]),t._v(" 数据更新。")]),t._v(" "),e("li",[e("code",[t._v("Model")]),t._v(" 更新完数据，通知 "),e("code",[t._v("ViewModel")]),t._v(" 数据发生变化。")]),t._v(" "),e("li",[e("code",[t._v("ViewModel")]),t._v(" 更新 "),e("code",[t._v("View")]),t._v(" 数据。")])]),t._v(" "),e("h3",{attrs:{id:"_3、mvc-数据更新流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、mvc-数据更新流程"}},[t._v("#")]),t._v(" 3、MVC 数据更新流程?")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("View")]),t._v(" 接收用户交互请求。")]),t._v(" "),e("li",[e("code",[t._v("View")]),t._v(" 将请求转交给 "),e("code",[t._v("Controller")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("Controller")]),t._v(" 操作 "),e("code",[t._v("Model")]),t._v(" 进行数据更新保存。")]),t._v(" "),e("li",[t._v("数据更新保存之后，"),e("code",[t._v("Model")]),t._v(" 会通知 "),e("code",[t._v("View")]),t._v(" 更新。")]),t._v(" "),e("li",[e("code",[t._v("View")]),t._v(" 更新变化数据使用户得到反馈。")])]),t._v(" "),e("h3",{attrs:{id:"_4、mvvm-模式和-mvc-的不同点？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、mvvm-模式和-mvc-的不同点？"}},[t._v("#")]),t._v(" 4、MVVM 模式和 MVC 的不同点？")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("ViewModel")]),t._v(" 替换了 "),e("code",[t._v("Controller")]),t._v("，在 "),e("code",[t._v("UI")]),t._v(" 层之下。")]),t._v(" "),e("li",[e("code",[t._v("ViewModel")]),t._v(" 向 "),e("code",[t._v("View")]),t._v(" 暴露了它所需要的数据和指令对象。")]),t._v(" "),e("li",[e("code",[t._v("ViewModel")]),t._v(" 接收来自 "),e("code",[t._v("Model")]),t._v(" 的数据。")])]),t._v(" "),e("p",[t._v("概括起来，"),e("code",[t._v("MVVM")]),t._v(" 是由 "),e("code",[t._v("MVC")]),t._v(" 发展而来，通过在 "),e("code",[t._v("Model")]),t._v(" 之上而在 "),e("code",[t._v("View")]),t._v(" 之下增加一个非视觉的组件将来自 "),e("code",[t._v("Model")]),t._v(" 的数据映射到 "),e("code",[t._v("View")]),t._v(" 中。")]),t._v(" "),e("h2",{attrs:{id:"_2、vue-的优缺点？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、vue-的优缺点？"}},[t._v("#")]),t._v(" 2、Vue 的优缺点？")]),t._v(" "),e("p",[e("strong",[t._v("优点")])]),t._v(" "),e("ul",[e("li",[t._v("创建单页面应用的轻量级 "),e("code",[t._v("Web")]),t._v(" 应用框架")]),t._v(" "),e("li",[t._v("简单易用")]),t._v(" "),e("li",[t._v("双向数据绑定")]),t._v(" "),e("li",[t._v("组件化的思想")]),t._v(" "),e("li",[t._v("虚拟 "),e("code",[t._v("DOM")])]),t._v(" "),e("li",[t._v("数据驱动视图")])]),t._v(" "),e("p",[e("strong",[t._v("缺点")])]),t._v(" "),e("ul",[e("li",[t._v("不支持 "),e("code",[t._v("IE8")]),t._v("（现阶段只能勉强凑出这么半点😂）")])]),t._v(" "),e("h2",{attrs:{id:"_3、vue-的核心思想？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、vue-的核心思想？"}},[t._v("#")]),t._v(" 3、Vue 的核心思想？")]),t._v(" "),e("p",[e("code",[t._v("Vue.js")]),t._v(" 一个核心思想是数据驱动。所谓数据驱动，是指视图是由数据驱动生成的，我们对视图的修改，不会直接操作 "),e("code",[t._v("DOM")]),t._v("，而是通过修改数据。\n它相比我们传统的前端开发，如使用 "),e("code",[t._v("jQuery")]),t._v(" 等前端库直接修改 "),e("code",[t._v("DOM")]),t._v("，大大简化了代码量。特别是当交互复杂的时候，只关心数据的修改会让代码的逻辑变的非常清晰，因为 "),e("code",[t._v("DOM")]),t._v(" 变成了数据的映射，我们所有的逻辑都是对数据的修改，而不用碰触 "),e("code",[t._v("DOM")]),t._v("，这样的代码非常利于维护。")]),t._v(" "),e("h2",{attrs:{id:"_4、vue-中的响应式原理缺陷？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、vue-中的响应式原理缺陷？"}},[t._v("#")]),t._v(" 4、Vue 中的响应式原理缺陷？")]),t._v(" "),e("h3",{attrs:{id:"_1、对于对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、对于对象"}},[t._v("#")]),t._v(" 1、对于对象")]),t._v(" "),e("p",[e("code",[t._v("Vue")]),t._v(" 不能检测 "),e("code",[t._v("属性")]),t._v(" 的添加或移除。由于 "),e("code",[t._v("Vue")]),t._v(" 会在初始化实例时通过 "),e("code",[t._v("Object.defineProperty()")]),t._v(" 对 "),e("code",[t._v("属性")]),t._v("\n执行 "),e("code",[t._v("getter/setter")]),t._v(" 转化，所以 "),e("code",[t._v("属性")]),t._v(" 必须在 "),e("code",[t._v("data")]),t._v(" 对象上存在才能让 "),e("code",[t._v("Vue")]),t._v(" 将它转换为响应式的。"),e("br"),t._v(" "),e("strong",[t._v("避免方法：")])]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[e("code",[t._v("Vue.set(object, propertyName, value)")]),t._v(" 或 "),e("code",[t._v("vm.$set(object, propertyName, value)")])])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[e("code",[t._v("this.someObject = Object.assign({}, this.someObject, { a: 1, b: 2 })")])])])])]),t._v(" "),e("h3",{attrs:{id:"_2、对于数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、对于数组"}},[t._v("#")]),t._v(" 2、对于数组")]),t._v(" "),e("p",[e("code",[t._v("Vue")]),t._v(" 不能检测以下数组的变动：")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[t._v("当你使用索引的方式直接设置一个数组项时，例如："),e("code",[t._v("vm.items[indexOfItem] = newValue")])])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("当你修改数组的长度时，例如："),e("code",[t._v("vm.items.length = newLength")])])])])]),t._v(" "),e("p",[e("strong",[t._v("避免方法：")])]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[e("code",[t._v("Vue.set(vm.items, indexOfItem, newValue)")]),t._v(" 或 "),e("code",[t._v("vm.items.splice(indexOfItem, 1, newValue)")]),t._v(", "),e("code",[t._v("vm.$set(vm.items, indexOfItem, newValue)")])])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[e("code",[t._v("vm.items.splice(newLength)")])])])])]),t._v(" "),e("h2",{attrs:{id:"_5、vue-生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、vue-生命周期"}},[t._v("#")]),t._v(" 5、Vue 生命周期")]),t._v(" "),e("h3",{attrs:{id:"_1、什么是生命周期函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是生命周期函数"}},[t._v("#")]),t._v(" 1、什么是生命周期函数?")]),t._v(" "),e("p",[t._v("生命周期函数，指的是 "),e("code",[t._v("Vue")]),t._v(" 实例的创建、更新、销毁三个阶段所触发执行的函数。也就是从开始创建、初始化数据、编译模板、挂载 "),e("code",[t._v("DOM")]),t._v("->渲染、更新->渲染、卸载等一系列过程，称为 "),e("code",[t._v("Vue")]),t._v(" 的生命周期。")]),t._v(" "),e("h3",{attrs:{id:"_2、vue-生命周期的作用是什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、vue-生命周期的作用是什么？"}},[t._v("#")]),t._v(" 2、Vue 生命周期的作用是什么？")]),t._v(" "),e("p",[t._v("它的生命周期有多个事件钩子，让我们在控制整个 "),e("code",[t._v("Vue")]),t._v(" 实例的过程时更容易形成良好的逻辑。")]),t._v(" "),e("h3",{attrs:{id:"_3、vue-生命周期总共有几个阶段？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、vue-生命周期总共有几个阶段？"}},[t._v("#")]),t._v(" 3、Vue 生命周期总共有几个阶段？")]),t._v(" "),e("p",[t._v("它可以总共分为 "),e("code",[t._v("8")]),t._v(" 个阶段：创建前 / 后、载入前 / 后、更新前 / 后、销毁前 / 后")]),t._v(" "),e("h3",{attrs:{id:"_4、vue-生命周期触发的时机？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、vue-生命周期触发的时机？"}},[t._v("#")]),t._v(" 4、Vue 生命周期触发的时机？")]),t._v(" "),e("p",[e("strong",[t._v("1. 第一次页面加载会触发哪几个钩子？")]),e("br"),t._v(" "),e("code",[t._v("beforeCreate、created、beforeMount、mounted")]),t._v(" 这几个钩子")]),t._v(" "),e("p",[e("strong",[t._v("2. DOM 渲染在哪个周期中就已经完成？")]),e("br"),t._v(" "),e("code",[t._v("DOM")]),t._v(" 渲染在 "),e("code",[t._v("mounted")]),t._v(" 就已经完成了")]),t._v(" "),e("p",[e("strong",[t._v("3. 每个生命周期适合哪些场景？")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("beforeCreate")]),t._v(": 可以在这加个 "),e("code",[t._v("loading")]),t._v(" 事件，在加载实例时触发")]),t._v(" "),e("li",[e("code",[t._v("created")]),t._v(": 初始化完成时的事件写在这里，如在这结束 "),e("code",[t._v("loading")]),t._v(" 事件，异步请求也适宜在这里调用")]),t._v(" "),e("li",[e("code",[t._v("mounted")]),t._v(": 挂载元素，获取到 "),e("code",[t._v("DOM")]),t._v(" 节点")]),t._v(" "),e("li",[e("code",[t._v("updated")]),t._v(": 如果对数据统一处理，在这里写上相应函数")]),t._v(" "),e("li",[e("code",[t._v("beforeDestroy")]),t._v(": 可以做一个确认停止事件的确认框")]),t._v(" "),e("li",[e("code",[t._v("nextTick")]),t._v(": 更新数据后立即操作 "),e("code",[t._v("DOM")])])]),t._v(" "),e("p",[e("strong",[t._v("4. 生命周期钩子函数代表的意思？")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("beforeCreate")]),t._v(" 阶段："),e("code",[t._v("vue")]),t._v(" 实例的挂载元素 "),e("code",[t._v("el")]),t._v(" 和数据对象 "),e("code",[t._v("data")]),t._v(" 都是 "),e("code",[t._v("undefined")]),t._v("， 还没有初始化。")]),t._v(" "),e("li",[e("code",[t._v("created")]),t._v(" 阶段："),e("code",[t._v("vue")]),t._v(" 实例的数据对象 "),e("code",[t._v("data")]),t._v(" 有了，可以访问里面的数据和方法， 未挂载到 "),e("code",[t._v("DOM，el")]),t._v(" 还没有")]),t._v(" "),e("li",[e("code",[t._v("beforeMount")]),t._v(" 阶段："),e("code",[t._v("vue")]),t._v(" 实例的 "),e("code",[t._v("el")]),t._v(" 和 "),e("code",[t._v("data")]),t._v(" 都初始化了，但是挂载之前为虚拟的 "),e("code",[t._v("dom")]),t._v(" 节点")]),t._v(" "),e("li",[e("code",[t._v("mounted")]),t._v(" 阶段："),e("code",[t._v("vue")]),t._v(" 实例挂载到真实 "),e("code",[t._v("DOM")]),t._v(" 上，此时可以获取 "),e("code",[t._v("DOM")]),t._v(" 节点")]),t._v(" "),e("li",[e("code",[t._v("beforeUpdate")]),t._v(" 阶段：响应式数据更新时调用，发生在虚拟 "),e("code",[t._v("DOM")]),t._v(" 打补丁之前， 适合在数据更新之前访问现有的 "),e("code",[t._v("DOM")]),t._v("，比如手动移除已添加的事件监听器")]),t._v(" "),e("li",[e("code",[t._v("updated")]),t._v(" 阶段：虚拟 "),e("code",[t._v("DOM")]),t._v(" 重新渲染和打补丁之后调用，此时可以获取新的 "),e("code",[t._v("DOM")]),t._v(" 节点，避免在这个钩子函数中操作数据，防止死循环")]),t._v(" "),e("li",[e("code",[t._v("beforeDestroy")]),t._v(" 阶段：实例销毁前调用，实例还可以用，"),e("code",[t._v("this")]),t._v(" 能获取到实例，常用于销毁定时器，解绑事件")]),t._v(" "),e("li",[e("code",[t._v("destroyed")]),t._v(" 阶段：实例销毁后调用，调用后所有事件监听器会被移除，所有的子实例都会被销毁")])]),t._v(" "),e("h2",{attrs:{id:"_6、v-show-与-v-if-区别？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、v-show-与-v-if-区别？"}},[t._v("#")]),t._v(" 6、v-show 与 v-if 区别？")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("v-show")]),t._v(" 是 "),e("code",[t._v("CSS")]),t._v(" 切换，"),e("code",[t._v("v-if")]),t._v(" 是完整的销毁和创建")]),t._v(" "),e("li",[t._v("使用频繁时用 "),e("code",[t._v("v-show")]),t._v("，运行时较少改变时使用 "),e("code",[t._v("v-if")])])]),t._v(" "),e("h2",{attrs:{id:"_7、说说你对-spa-单页面的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7、说说你对-spa-单页面的理解"}},[t._v("#")]),t._v(" 7、说说你对 SPA 单页面的理解")]),t._v(" "),e("p",[e("code",[t._v("SPA（ single-page application ）")]),t._v("仅在 "),e("code",[t._v("Web")]),t._v(" 页面初始化时加载相应的 "),e("code",[t._v("HTML、CSS")]),t._v(" 和 "),e("code",[t._v("JavaScript")]),t._v("。一旦页面加载完成，"),e("code",[t._v("SPA")]),t._v(" 不会因为用户的操作而进行页面的重新加载或跳转；取而代之的是利用路由机制实现 "),e("code",[t._v("HTML")]),t._v(" 内容的变换，"),e("code",[t._v("UI")]),t._v(" 与用户的交互，避免页面的重新加载。")]),t._v(" "),e("p",[e("strong",[t._v("优点")])]),t._v(" "),e("ul",[e("li",[t._v("用户体验好、快，内容的改变不需要重新加载整个页面，避免了不必要的跳转和重复渲染；")]),t._v(" "),e("li",[t._v("基于上面一点，"),e("code",[t._v("SPA")]),t._v(" 相对对服务器压力小；")]),t._v(" "),e("li",[t._v("前后端职责分离，架构清晰，前端进行交互逻辑，后端负责数据处理；")])]),t._v(" "),e("p",[e("strong",[t._v("缺点")])]),t._v(" "),e("ul",[e("li",[t._v("初次加载耗时多：为实现单页 "),e("code",[t._v("Web")]),t._v(" 应用功能及显示效果，需要在加载页面的时候将 "),e("code",[t._v("JavaScript")]),t._v("、"),e("code",[t._v("CSS")]),t._v(" 统一加载，部分页面按需加载；")]),t._v(" "),e("li",[t._v("前进后退路由管理：由于单页应用在一个页面中显示所有的内容，所以不能使用浏览器的前进后退功能，所有的页面切换需要自己建立堆栈管理；（通过资料查阅，其实是前端路由机制解决了单页应用无法前进后退的问题。"),e("code",[t._v("Hash")]),t._v(" 模式中Hash变化会被浏览器记录（"),e("code",[t._v("onhashchange")]),t._v(" 事件），"),e("code",[t._v("History")]),t._v(" 模式利用 "),e("code",[t._v("H5")]),t._v(" 新增的 "),e("code",[t._v("pushState")]),t._v(" 和 "),e("code",[t._v("replaceState")]),t._v(" 方法可改变浏览器历史记录栈。）")]),t._v(" "),e("li",[e("code",[t._v("SEO")]),t._v(" 难度较大：由于所有的内容都在一个页面中动态替换显示，所以在 "),e("code",[t._v("SEO")]),t._v(" 上其有着天然的弱势。")])]),t._v(" "),e("h2",{attrs:{id:"_8、computed-和-watch-的区别？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8、computed-和-watch-的区别？"}},[t._v("#")]),t._v(" 8、computed 和 watch 的区别？")]),t._v(" "),e("p",[e("strong",[t._v("区别")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("computed")]),t._v("： 是计算属性，依赖其它属性值，并且 "),e("code",[t._v("computed")]),t._v(" 的值有缓存，只有它依赖的属性值发生改变，才会重新计算 "),e("code",[t._v("computed")]),t._v(" 的值；")]),t._v(" "),e("li",[e("code",[t._v("watch")]),t._v("： 更多的是「观察」的作用，类似于某些数据的监听回调，每当监听的数据变化时都会执行回调进行后续操作；")])]),t._v(" "),e("p",[e("strong",[t._v("运用场景")])]),t._v(" "),e("ul",[e("li",[t._v("当我们需要进行数值计算，并且依赖于其它数据时，应该使用 "),e("code",[t._v("computed")]),t._v("，因为可以利用 "),e("code",[t._v("computed")]),t._v(" 的缓存特性，避免每次获取值时，都要重新计算。")]),t._v(" "),e("li",[t._v("当我们需要在数据变化时执行异步或开销较大的操作时，应该使用 "),e("code",[t._v("watch")]),t._v("，因为使用 "),e("code",[t._v("watch")]),t._v(" 选项允许我们执行异步操作 ( 访问一个 "),e("code",[t._v("API")]),t._v(" )，限制我们执行该操作的频率，这些都是计算属性无法做到的。")])]),t._v(" "),e("p",[e("strong",[t._v("computed 的原理?")]),e("br"),t._v(" "),e("code",[t._v("computed")]),t._v(" 本质是一个惰性求值的观察者。当计算属性依赖于其他数据时，属性并不会立即重新计算，只有之后其他地方需要读取属性的时候，它才会真正计算，即具备 "),e("code",[t._v("lazy")]),t._v("（懒计算）特性。")]),t._v(" "),e("h2",{attrs:{id:"_9、vue-组件-data-为什么必须是函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9、vue-组件-data-为什么必须是函数"}},[t._v("#")]),t._v(" 9、Vue 组件 data 为什么必须是函数?")]),t._v(" "),e("p",[t._v("因为组件是可以复用的,"),e("code",[t._v("JS")]),t._v(" 对象是引用关系,如果组件 "),e("code",[t._v("data")]),t._v(" 是一个对象,那么子组件中的 "),e("code",[t._v("data")]),t._v(" 属性值会互相污染, 产生副作用。 所以一个组件的 "),e("code",[t._v("data")]),t._v(" 选项必须是一个函数。")]),t._v(" "),e("h2",{attrs:{id:"_10、谈谈-keep-alive-的理解？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10、谈谈-keep-alive-的理解？"}},[t._v("#")]),t._v(" 10、谈谈 keep-alive 的理解？")]),t._v(" "),e("p",[e("strong",[t._v("keep-alive")]),t._v(" 是 "),e("strong",[t._v("Vue")]),t._v(" 内置的一个组件，可以使被包含的组件保留状态，避免重新渲染 ，其有以下特性：")]),t._v(" "),e("ul",[e("li",[t._v("一般结合路由和动态组件一起使用，用于缓存组件。")]),t._v(" "),e("li",[t._v("提供 "),e("code",[t._v("include")]),t._v(" 和 "),e("code",[t._v("exclude")]),t._v(" 属性，两者都支持字符串或正则表达式， "),e("code",[t._v("include")]),t._v(" 表示只有名称匹配的组件会被缓存，"),e("code",[t._v("exclude")]),t._v(" 表示任何名称匹配的组件都不会被缓存 ，其中 "),e("code",[t._v("exclude")]),t._v(" 的优先级比 "),e("code",[t._v("include")]),t._v(" 高。")]),t._v(" "),e("li",[t._v("对应两个钩子函数 "),e("code",[t._v("activated")]),t._v(" 和 "),e("code",[t._v("deactivated")]),t._v("，当组件被激活时，触发钩子函数 "),e("code",[t._v("activated")]),t._v("，当组件被移除时，触发钩子函数 "),e("code",[t._v("deactivated")]),t._v("。")])]),t._v(" "),e("h2",{attrs:{id:"_11、vue-中的-key-有什么作用？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11、vue-中的-key-有什么作用？"}},[t._v("#")]),t._v(" 11、Vue 中的 key 有什么作用？")]),t._v(" "),e("p",[e("strong",[t._v("作用：")]),t._v(" "),e("code",[t._v("key")]),t._v(" 是为 "),e("code",[t._v("Vue")]),t._v(" 中 vnode 的唯一标记，通过这个 "),e("code",[t._v("key")]),t._v("，我们的 "),e("code",[t._v("diff")]),t._v(" 操作可以更准确、更快速。"),e("br"),t._v(" "),e("strong",[t._v("更准确：")]),t._v(" 因为带 "),e("code",[t._v("key")]),t._v(" 就不是就地复用了，在 "),e("code",[t._v("sameNode")]),t._v(" 函数 "),e("code",[t._v("a.key === b.key")]),t._v(" 对比中可以避免就地复用的情况。所以会更加准确。"),e("br"),t._v(" "),e("strong",[t._v("更快速：")]),t._v(" 因为利用 "),e("code",[t._v("key")]),t._v(" 的唯一性生成 "),e("code",[t._v("Map")]),t._v(" 对象来获取对应节点，比遍历方式更快")]),t._v(" "),e("h2",{attrs:{id:"_12、vue-组件通信方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12、vue-组件通信方式"}},[t._v("#")]),t._v(" 12、Vue 组件通信方式")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("props / $emit")]),t._v("，适用父子组件之间的通信")]),t._v(" "),e("li",[e("code",[t._v("$parent / $children")]),t._v("， 适用父子组件之间的通信")]),t._v(" "),e("li",[e("code",[t._v("ref / $refs")]),t._v("， 适用父子组件之间的通信")]),t._v(" "),e("li",[e("code",[t._v(".sync / $emit('update:foo', newValue)")])]),t._v(" "),e("li",[e("code",[t._v("$attrs / $listeners")]),t._v(" 适用于隔代组件之间的通信")]),t._v(" "),e("li",[e("code",[t._v("provide / inject")]),t._v(" 适用于隔代组件通信")]),t._v(" "),e("li",[e("code",[t._v("EventBus")])]),t._v(" "),e("li",[e("code",[t._v("vuex")]),t._v(" 适用于父子、隔代、兄弟组件通信")])]),t._v(" "),e("h2",{attrs:{id:"_13、请介绍一下你对-vuex-的理解？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13、请介绍一下你对-vuex-的理解？"}},[t._v("#")]),t._v(" 13、请介绍一下你对 Vuex 的理解？")]),t._v(" "),e("p",[e("code",[t._v("Vuex")]),t._v(" 是一个专为 "),e("code",[t._v("Vue.js")]),t._v(" 应用程序开发的状态管理模式。它用于存储所有组件的状态，其核心就是 "),e("code",[t._v("store")]),t._v("（仓库）。"),e("code",[t._v('"store"')]),t._v(" 基本上就是一个容器，它包含着你的应用中大部分的状态 ( "),e("code",[t._v("state")]),t._v(" )。")]),t._v(" "),e("h3",{attrs:{id:"_1、响应式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、响应式"}},[t._v("#")]),t._v(" 1、响应式")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Vuex")]),t._v(" 的状态存储是响应式的。当 Vue 组件从 "),e("code",[t._v("store")]),t._v(" 中读取状态的时候，若 "),e("code",[t._v("store")]),t._v(" 中的状态发生变化，那么相应的组件也会相应地得到高效更新。")]),t._v(" "),e("li",[t._v("改变 "),e("code",[t._v("store")]),t._v(" 中的状态的唯一途径就是显式地提交 "),e("code",[t._v("(commit)mutation")]),t._v("。这样使得我们可以方便地跟踪每一个状态的变化。")])]),t._v(" "),e("h3",{attrs:{id:"_2、模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、模块"}},[t._v("#")]),t._v(" 2、模块")]),t._v(" "),e("p",[t._v("主要包括以下几个模块：")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[e("code",[t._v("State")]),t._v("：可以设置一些默认的状态。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[e("code",[t._v("Getter")]),t._v("：类似计算属性，可以获取 "),e("code",[t._v("Store")]),t._v(" 中 "),e("code",[t._v("state")]),t._v(" 数据来进行二次封装，"),e("code",[t._v("mapGetters")]),t._v(" 辅助函数仅仅是将 "),e("code",[t._v("store")]),t._v(" 中的 "),e("code",[t._v("getter")]),t._v(" 映射到局部计算属性。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[e("code",[t._v("Mutation")]),t._v("：是唯一更改 "),e("code",[t._v("store")]),t._v(" 中状态的方法，且必须是同步函数。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[e("code",[t._v("Action")]),t._v("：用于提交 "),e("code",[t._v("mutation")]),t._v("，而不是直接变更状态，可以包含任意异步操作。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"5"}},[e("li",[e("code",[t._v("Module")]),t._v("：允许将单一的 "),e("code",[t._v("Store")]),t._v(" 拆分为多个 "),e("code",[t._v("store")]),t._v(" 且同时保存在单一的状态树中。")])])])]),t._v(" "),e("h3",{attrs:{id:"_3、vuex-解决了什么问题？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、vuex-解决了什么问题？"}},[t._v("#")]),t._v(" 3、Vuex 解决了什么问题？")]),t._v(" "),e("ul",[e("li",[t._v("多个组件依赖于同一状态时，对于多层嵌套的组件的状态传递将会非常繁琐，并且对于兄弟组件间的状态传递无能为力。")]),t._v(" "),e("li",[t._v("来自不同组件的行为需要变更同一状态。以往采用父子组件直接引用或者通过事件来变更和同步状态的多份拷贝。以上的这些模式非常脆弱，通常会导致无法维护的代码。")])]),t._v(" "),e("h2",{attrs:{id:"_14、说说对-vue-router-的理解？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14、说说对-vue-router-的理解？"}},[t._v("#")]),t._v(" 14、说说对 vue-router 的理解？")]),t._v(" "),e("p",[e("code",[t._v("vue-router")]),t._v(" 有 "),e("code",[t._v("3")]),t._v(" 种路由模式："),e("code",[t._v("hash、history、abstract")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("hash")]),t._v(": 使用 "),e("code",[t._v("URL hash")]),t._v(" 值来作路由。支持所有浏览器，包括不支持 "),e("code",[t._v("HTML5 History Api")]),t._v(" 的浏览器；")]),t._v(" "),e("li",[e("code",[t._v("history")]),t._v(": 依赖 "),e("code",[t._v("HTML5 History API")]),t._v(" 和服务器配置。具体可以查看 "),e("code",[t._v("HTML5 History")]),t._v(" 模式；")]),t._v(" "),e("li",[e("code",[t._v("abstract")]),t._v(": 支持所有 "),e("code",[t._v("JavaScript")]),t._v(" 运行环境，如 "),e("code",[t._v("Node.js")]),t._v(" 服务器端。如果发现没有浏览器的 "),e("code",[t._v("API")]),t._v("，路由会自动强制进入这个模式.")])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'history'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HTML5History")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hash'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashHistory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fallback"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abstract'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractHistory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("invalid mode: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("mode"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("h3",{attrs:{id:"_1、hash-模式的实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、hash-模式的实现原理"}},[t._v("#")]),t._v(" 1、hash 模式的实现原理")]),t._v(" "),e("p",[t._v("在路由中带有一个 "),e("code",[t._v("#")]),t._v("，主要原理是通过监听 "),e("code",[t._v("#")]),t._v(" 后的 "),e("code",[t._v("URL")]),t._v(" 路径标识符的改变而触发浏览器 "),e("code",[t._v("hashchange")]),t._v(" 事件，然后通过获取 "),e("code",[t._v("location.hash")]),t._v(" 得到当前的路径标识符，从而对页面进行跳转")]),t._v(" "),e("p",[e("strong",[t._v("hash 路由模式的实现主要是基于下面几个特性：")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("URL")]),t._v(" 中 "),e("code",[t._v("hash")]),t._v(" 值只是客户端的一种状态，也就是说当向服务器端发出请求时，"),e("code",[t._v("hash")]),t._v(" 部分不会被发送；")]),t._v(" "),e("li",[e("code",[t._v("hash")]),t._v(" 值的改变，都会在浏览器访问历史中增加一个记录。因此我们能通过浏览器的回退、前进按钮控制 "),e("code",[t._v("hash")]),t._v(" 的切换；")]),t._v(" "),e("li",[t._v("可以通过 "),e("code",[t._v("a")]),t._v(" 标签，并设置 "),e("code",[t._v("href")]),t._v(" 属性，当用户点击这个标签后，"),e("code",[t._v("URL")]),t._v(" 的 "),e("code",[t._v("hash")]),t._v(" 值会发生改变；或者使用 "),e("code",[t._v("JavaScript")]),t._v(" 来对 "),e("code",[t._v("loaction.hash")]),t._v(" 进行赋值，改变 "),e("code",[t._v("URL")]),t._v(" 的 "),e("code",[t._v("hash")]),t._v(" 值；")]),t._v(" "),e("li",[t._v("我们可以使用 "),e("code",[t._v("hashchange")]),t._v(" 事件来监听 "),e("code",[t._v("hash")]),t._v(" 值的变化，从而对页面进行跳转（渲染）。\n:::")])]),t._v(" "),e("h3",{attrs:{id:"_2、history-模式的实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、history-模式的实现原理"}},[t._v("#")]),t._v(" 2、history 模式的实现原理")]),t._v(" "),e("p",[e("code",[t._v("HTML5")]),t._v(" 提供了"),e("code",[t._v("History API")]),t._v(" 来实现 "),e("code",[t._v("URL")]),t._v(" 的变化。其中做最主要的 "),e("code",[t._v("API")]),t._v(" 有以下两个："),e("code",[t._v("history.pushState()")]),t._v(" 和 "),e("code",[t._v("history.repalceState()")]),t._v("。这两个 "),e("code",[t._v("API")]),t._v(" 可以在不进行刷新的情况下，操作浏览器的历史纪录。唯一不同的是，前者是新增一个历史记录，后者是直接替换当前的历史记录，如下所示：")]),t._v(" "),e("ol",[e("li",[t._v("window.history.pushState(null, null, path);")]),t._v(" "),e("li",[t._v("window.history.replaceState(null, null, path);")])]),t._v(" "),e("p",[e("strong",[t._v("history 路由模式的实现主要基于存在下面几个特性：")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("pushState")]),t._v(" 和 "),e("code",[t._v("repalceState")]),t._v(" 两个 "),e("code",[t._v("API")]),t._v(" 来操作实现 "),e("code",[t._v("URL")]),t._v(" 的变化；")]),t._v(" "),e("li",[t._v("我们可以使用 "),e("code",[t._v("popstate")]),t._v(" 事件来监听 "),e("code",[t._v("url")]),t._v(" 的变化，从而对页面进行跳转（渲染）；")]),t._v(" "),e("li",[t._v("调用 "),e("code",[t._v("history.pushState()")]),t._v(" 或 "),e("code",[t._v("history.replaceState()")]),t._v(" 不会触发 "),e("code",[t._v("popstate")]),t._v(" 事件，这时我们需要手动触发页面跳转（渲染）。\n:::")])]),t._v(" "),e("h2",{attrs:{id:"_15、vue-router-有哪几种导航守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15、vue-router-有哪几种导航守卫"}},[t._v("#")]),t._v(" 15、vue-router 有哪几种导航守卫?")]),t._v(" "),e("ul",[e("li",[t._v("全局守卫")]),t._v(" "),e("li",[t._v("路由独享守卫")]),t._v(" "),e("li",[t._v("路由组件内的守卫")])]),t._v(" "),e("h3",{attrs:{id:"_1、全局守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、全局守卫"}},[t._v("#")]),t._v(" 1、全局守卫")]),t._v(" "),e("p",[e("code",[t._v("vue-router")]),t._v(" 全局有三个守卫：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("router.beforeEach")]),t._v(" 全局前置守卫 进入路由之前")]),t._v(" "),e("li",[e("code",[t._v("router.beforeResolve")]),t._v(" 全局解析守卫(2.5.0+) 在 "),e("code",[t._v("beforeRouteEnter")]),t._v(" 调用之后调用")]),t._v(" "),e("li",[e("code",[t._v("router.afterEach")]),t._v(" 全局后置钩子 进入路由之后")])]),t._v(" "),e("p",[t._v("使用方法:")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js 入口文件")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" router "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./router'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入路由")]),t._v("\n  router"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  router"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeResolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  router"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterEach")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'afterEach 全局后置钩子'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("h3",{attrs:{id:"_2、路由独享守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、路由独享守卫"}},[t._v("#")]),t._v(" 2、路由独享守卫")]),t._v(" "),e("p",[t._v("如果你不想全局配置守卫的话，你可以为某些路由单独配置守卫：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  routes"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      component"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Foo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("beforeEnter")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数用法什么的都一样,调用顺序在全局前置守卫后面，所以不会被全局守卫覆盖")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("h3",{attrs:{id:"_3、路由组件内的守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、路由组件内的守卫"}},[t._v("#")]),t._v(" 3、路由组件内的守卫")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("beforeRouteEnter")]),t._v(" 进入路由前, 在路由独享守卫后调用 不能 获取组件实例 "),e("code",[t._v("this")]),t._v("，组件实例还没被创建")]),t._v(" "),e("li",[e("code",[t._v("beforeRouteUpdate")]),t._v(" (2.2) 路由复用同一个组件时, 在当前路由改变，但是该组件被复用时调用 可以访问组件实例 "),e("code",[t._v("this")])]),t._v(" "),e("li",[e("code",[t._v("beforeRouteLeave")]),t._v(" 离开当前路由时, 导航离开该组件的对应路由时调用，可以访问组件实例 "),e("code",[t._v("this")])])]),t._v(" "),e("h2",{attrs:{id:"_16、nexttick实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16、nexttick实现原理"}},[t._v("#")]),t._v(" 16、nextTick实现原理?")]),t._v(" "),e("p",[e("strong",[t._v("(宏任务和微任务) 异步方法")]),e("br"),t._v(" "),e("code",[t._v("nextTick")]),t._v(" 方法主要是使用了宏任务和微任务，定义了一个异步方法。多次调用 "),e("code",[t._v("nextTick")]),t._v(" 会将方法存入 队列中，通过这个异步方法清空当前队列。 所以这个 "),e("code",[t._v("nextTick")]),t._v(" 方法就是异步方法")]),t._v(" "),e("h2",{attrs:{id:"_17、vue-的双向数据绑定原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_17、vue-的双向数据绑定原理"}},[t._v("#")]),t._v(" 17、Vue 的双向数据绑定原理?")]),t._v(" "),e("p",[t._v("响应式原理就是，我们通过递归遍历，把vue实例中 "),e("code",[t._v("data")]),t._v(" 里面定义的数据，用 "),e("code",[t._v("defineReactive（Object.defineProperty）")]),t._v(" 重新定义。每个数据内新建一个 "),e("code",[t._v("Dep")]),t._v(" 实例，闭包中包含了这个 "),e("code",[t._v("Dep")]),t._v(" 类的实例，用来收集 "),e("code",[t._v("Watcher")]),t._v(" 对象。在对象被「读」的时候，会触发 "),e("code",[t._v("reactiveGetter")]),t._v(" 函数把当前的 "),e("code",[t._v("Watcher")]),t._v(" 对象（存放在 "),e("code",[t._v("Dep.target")]),t._v(" 中）收集到 "),e("code",[t._v("Dep")]),t._v(" 类中去。之后如果当该对象被「写」的时候，则会触发 "),e("code",[t._v("reactiveSetter")]),t._v(" 方法，通知 "),e("code",[t._v("Dep")]),t._v(" 类调用 "),e("code",[t._v("notify")]),t._v(" 来触发所有 "),e("code",[t._v("Watcher")]),t._v(" 对象的 "),e("code",[t._v("update")]),t._v(" 方法更新对应视图。")]),t._v(" "),e("p",[e("code",[t._v("Vue")]),t._v(" 响应式原理的核心就是 "),e("code",[t._v("Observer、Dep、Watcher")]),t._v(" 三个类。"),e("br"),t._v(" "),e("code",[t._v("Observer")]),t._v(" 中进行响应式的绑定，在数据被读的时候，触发get方法，执行 "),e("code",[t._v("Dep")]),t._v(" 来收集依赖，也就是收集 "),e("code",[t._v("Watcher")]),t._v("。\n在数据被改的时候，触发 "),e("code",[t._v("set")]),t._v(" 方法，通过对应的所有依赖("),e("code",[t._v("Watcher")]),t._v(")，去执行更新。比如 "),e("code",[t._v("watch")]),t._v(" 和 "),e("code",[t._v("computed")]),t._v(" 就执行开发者自定义的回调方法。")]),t._v(" "),e("p",[e("code",[t._v("vue.js")]),t._v(" 是采用数据劫持和发布者-订阅者模式的方式， 通过 "),e("code",[t._v("Object.defineProperty")]),t._v(" 创建⼀个 "),e("code",[t._v("observe")]),t._v(" 来劫持监听所有的属性，把这些属性全部转为 "),e("code",[t._v("getter")]),t._v("\n和 "),e("code",[t._v("setter")]),t._v(" 。"),e("code",[t._v("Vue")]),t._v(" 中每个组件实例都会对应⼀个 "),e("code",[t._v("watcher")]),t._v(" 实例，它会在组件渲染的过程中把使⽤过的数据属性通过 "),e("code",[t._v("getter")]),t._v(" 收集为依赖。之后当依赖项的 "),e("code",[t._v("setter")]),t._v(" 触发时，会通知 "),e("code",[t._v("watcher")]),t._v(" ，从⽽使它关联的组件重新渲染。")]),t._v(" "),e("p",[t._v("主要分为以下几个步骤：")]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("步骤 1")]),t._v(" "),e("p",[t._v("1、需要 "),e("code",[t._v("Observer")]),t._v(" 的数据对象进行递归遍历，包括子属性对象的属性，都加上 "),e("code",[t._v("setter/getter")]),t._v("，这样的话，给这个对象的某个值赋值，就会触发 "),e("code",[t._v("setter")]),t._v("，那么就能够监听到数据的变化")])]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("步骤 2")]),t._v(" "),e("p",[t._v("2、"),e("code",[t._v("compile")]),t._v(" 解析模板指令，将模板中的变量替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据发生变化，收到通知，更新视图")])]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("步骤 3")]),t._v(" "),e("p",[t._v("3、"),e("code",[t._v("Watcher")]),t._v(" 订阅者是 "),e("code",[t._v("Observer")]),t._v(" 和 "),e("code",[t._v("Compile")]),t._v(" 之间通信的桥梁，主要做的事情是:"),e("br"),t._v("\n①在自身实例化时往属性订阅器("),e("code",[t._v("dep")]),t._v(")里添加自己。"),e("br"),t._v("\n②自身必须有一个 "),e("code",[t._v("update()")]),t._v(" 方法。"),e("br"),t._v("\n③待属性变动 "),e("code",[t._v("dep.notify()")]),t._v(" 通知时，能调用自身的 "),e("code",[t._v("update()")]),t._v(" 方法，并触发 "),e("code",[t._v("Compile")]),t._v(" 中绑定的回调，更新视图。")])]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("步骤4")]),t._v(" "),e("p",[t._v("4、"),e("code",[t._v("MVVM")]),t._v(" 作为数据绑定的入口，整合 "),e("code",[t._v("Observer")]),t._v("、"),e("code",[t._v("Compile")]),t._v(" 和 "),e("code",[t._v("Watcher")]),t._v(" 三者，通过 "),e("code",[t._v("Observer")]),t._v(" 来监听自己的数据变化，通过 "),e("code",[t._v("Compile")]),t._v(" 来解析模板指令，最终利用 "),e("code",[t._v("Watcher")]),t._v(" 搭起 "),e("code",[t._v("Observer")]),t._v(" 和 "),e("code",[t._v("Compile")]),t._v(" 之间的通信桥梁，达到数据变化 -> 视图更新；视图交互变化("),e("code",[t._v("input")]),t._v(") -> 数据更新的双向绑定效果。")])]),t._v(" "),e("h2",{attrs:{id:"_18、怎样理解-vue-的单向数据流？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18、怎样理解-vue-的单向数据流？"}},[t._v("#")]),t._v(" 18、怎样理解 Vue 的单向数据流？")]),t._v(" "),e("p",[e("code",[t._v("vue")]),t._v(" 组件间传递数据是单向的，即数据总是由父组件传递到子组件，子组件在其内部可以有自己维护的数据，但它无权修改父组件传递给它的数据，当我们尝试这样做的时候，"),e("code",[t._v("vue")]),t._v(" 将会报错。这样做是为了组件间更好的解耦，在开发中可能有多个子组件依赖于父组件的某个数据，假如子组件可以修改父组件数据的话，一个子组件变化会引发所有依赖这个数据的子组件发生变化，所以 "),e("code",[t._v("vue")]),t._v(" 不推荐子组件修改父组件的数据，直接修改 "),e("code",[t._v("props")]),t._v(" 会抛出警告。")]),t._v(" "),e("p",[t._v("所以，当你想要在子组件去修改 "),e("code",[t._v("props")]),t._v(" 时，把这个子组件当成父组件那样用，所以就有了")]),t._v(" "),e("ul",[e("li",[t._v("1、定义一个局部变量，并用 "),e("code",[t._v("prop")]),t._v(" 的值初始化它。")]),t._v(" "),e("li",[t._v("2、定义一个计算属性，处理 "),e("code",[t._v("prop")]),t._v(" 的值并返回。")])]),t._v(" "),e("h2",{attrs:{id:"_19、v-model-的原理？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_19、v-model-的原理？"}},[t._v("#")]),t._v(" 19、v-model 的原理？")]),t._v(" "),e("p",[e("code",[t._v("v-model")]),t._v(" 指令用于实现 "),e("code",[t._v("input")]),t._v("、"),e("code",[t._v("select")]),t._v(" 等表单元素的双向绑定，是个语法糖。"),e("br"),t._v("\n我们在 "),e("code",[t._v("vue")]),t._v(" 项目中主要使用 "),e("code",[t._v("v-model")]),t._v(" 指令在表单 "),e("code",[t._v("input")]),t._v("、"),e("code",[t._v("textarea")]),t._v("、"),e("code",[t._v("select")]),t._v(" 等元素上创建双向数据绑定，我们知道 "),e("code",[t._v("v-model")]),t._v(" 本质上不过是语法糖，"),e("code",[t._v("v-model")]),t._v(" 在内部为不同的输入元素使用不同的属性并抛出不同的事件：")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("text")]),t._v(" 和 "),e("code",[t._v("textarea")]),t._v(" 元素使用 "),e("code",[t._v("value")]),t._v(" 属性和 "),e("code",[t._v("input")]),t._v(" 事件；")]),t._v(" "),e("li",[e("code",[t._v("checkbox")]),t._v(" 和 "),e("code",[t._v("radio")]),t._v(" 使用 "),e("code",[t._v("checked")]),t._v(" 属性和 "),e("code",[t._v("change")]),t._v(" 事件；")]),t._v(" "),e("li",[e("code",[t._v("select")]),t._v(" 字段将 "),e("code",[t._v("value")]),t._v(" 作为 "),e("code",[t._v("prop")]),t._v(" 并将 "),e("code",[t._v("change")]),t._v(" 作为事件。")])]),t._v(" "),e("p",[e("strong",[t._v("以 input 表单元素为例：")])]),t._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("something"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 相当于 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("value")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("something"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("input")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("something = $event.target.value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("如果在自定义组件中，"),e("code",[t._v("v-model")]),t._v(" 默认会利用名为 "),e("code",[t._v("value")]),t._v(" 的 "),e("code",[t._v("prop")]),t._v(" 和名为 "),e("code",[t._v("input")]),t._v(" 的事件，如下所示：")]),t._v(" "),e("div",{staticClass:"language-vue line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 父组件 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("base-checkbox")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("baseCheck"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 子组件 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("checkbox"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":checked")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("checked"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@change")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$emit("),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("change"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(", $event.target.checked)"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token script"}},[e("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  model"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    prop"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'checked'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    event"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  props"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    checked"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Boolean\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("h2",{attrs:{id:"_20、-vue中是如何检测数组变化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_20、-vue中是如何检测数组变化"}},[t._v("#")]),t._v(" 20、 Vue中是如何检测数组变化?")]),t._v(" "),e("ul",[e("li",[t._v("使用函数劫持的方式，重写了数组的方法")]),t._v(" "),e("li",[e("code",[t._v("Vue")]),t._v(" 将 "),e("code",[t._v("data")]),t._v(" 中的数组，进行了原型链重写。指向了自己定义的数组原型方法，这样当调用数组 "),e("code",[t._v("api")]),t._v(" 时，可以通知依赖更新.如果数组中包含着引用类型。会对数组中的引用类型再次进行监控。")])]),t._v(" "),e("h2",{attrs:{id:"_21、proxy-与-defineproperty-对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_21、proxy-与-defineproperty-对比"}},[t._v("#")]),t._v(" 21、Proxy 与 defineProperty 对比")]),t._v(" "),e("p",[e("code",[t._v("Object.defineProperty")]),t._v(" 只能劫持对象的属性,因此我们需要对每个对象的每个属性进行遍历。"),e("code",[t._v("Vue 2.x")]),t._v(" 里,是通过 递归遍历 "),e("code",[t._v("data")]),t._v(" 对象来实现对数据的监控的,如果属性值也是对象那么需要深度遍历,显然如果能劫持一个完整的对象是才是更好的选择。")]),t._v(" "),e("p",[e("code",[t._v("Proxy")]),t._v(" 可以劫持整个对象,并返回一个新的对象。"),e("code",[t._v("Proxy")]),t._v(" 不仅可以代理对象,还可以代理数组。还可以代理动态增加新的属性。")]),t._v(" "),e("p",[e("strong",[t._v("Proxy 的优势如下")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Proxy")]),t._v(" 可以直接监听对象而非属性；")]),t._v(" "),e("li",[e("code",[t._v("Proxy")]),t._v(" 可以直接监听数组的变化；")]),t._v(" "),e("li",[e("code",[t._v("Proxy")]),t._v(" 有多达 "),e("code",[t._v("13")]),t._v(" 种拦截方法,不限于 "),e("code",[t._v("apply")]),t._v("、"),e("code",[t._v("ownKeys")]),t._v("、"),e("code",[t._v("deleteProperty")]),t._v("、"),e("code",[t._v("has")]),t._v(" 等等是 "),e("code",[t._v("Object.defineProperty")]),t._v(" 不具备的；")]),t._v(" "),e("li",[e("code",[t._v("Proxy")]),t._v(" 返回的是一个新对象,我们可以只操作新的对象达到目的,而 "),e("code",[t._v("Object.defineProperty")]),t._v(" 只能遍历对象属性直接修改；")]),t._v(" "),e("li",[e("code",[t._v("Proxy")]),t._v(" 作为新标准将受到浏览器厂商重点持续的性能优化，也就是传说中的新标准的性能红利；")])]),t._v(" "),e("p",[e("strong",[t._v("Object.defineProperty 的优势如下")])]),t._v(" "),e("ul",[e("li",[t._v("兼容性好，支持 "),e("code",[t._v("IE9")]),t._v("，而 "),e("code",[t._v("Proxy")]),t._v(" 的存在浏览器兼容性问题,而且无法用 "),e("code",[t._v("polyfill")]),t._v(" 磨平，因此 "),e("code",[t._v("Vue")]),t._v(" 的作者才声明需要等到下个大版本( "),e("code",[t._v("3.0")]),t._v(" )才能用 "),e("code",[t._v("Proxy")]),t._v(" 重写。")])]),t._v(" "),e("h2",{attrs:{id:"_22、vm-set-解决对象响应式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_22、vm-set-解决对象响应式"}},[t._v("#")]),t._v(" 22、vm.$set() 解决对象响应式?")]),t._v(" "),e("p",[t._v("受现代 "),e("code",[t._v("JavaScript")]),t._v(" 的限制 ，"),e("code",[t._v("Vue")]),t._v(" 无法检测到对象属性的添加或删除。由于 "),e("code",[t._v("Vue")]),t._v(" 会在初始化实例时对属性执行 "),e("code",[t._v("getter/setter")]),t._v(" 转化，所以属性必须在 "),e("code",[t._v("data")]),t._v(" 对象上存在才能让 "),e("code",[t._v("Vue")]),t._v(" 将它转换为响应式的。但是 "),e("code",[t._v("Vue")]),t._v(" 提供了 "),e("code",[t._v("Vue.set (object, propertyName, value) / vm.$set (object, propertyName, value)")]),t._v(" 来实现为对象添加响应式属性，那框架本身是如何实现的呢？")]),t._v(" "),e("p",[t._v("我们查看对应的 "),e("code",[t._v("Vue")]),t._v(" 源码："),e("code",[t._v("vue/src/core/instance/index.js")])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// target 为数组  ")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isValidArrayIndex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改数组的长度, 避免索引>数组长度导致splcie()执行有误")]),t._v("\n    target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 利用数组的splice变异方法触发响应式  ")]),t._v("\n    target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key 已经存在，直接修改属性值  ")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" target "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ob "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__ob__\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// target 本身就不是响应式数据, 直接赋值")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ob"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对属性进行响应式处理")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ob"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ob"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dep"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br")])]),e("p",[e("strong",[t._v("vm.$set 的实现原理")])]),t._v(" "),e("ul",[e("li",[t._v("如果目标是数组，直接使用数组的 "),e("code",[t._v("splice")]),t._v(" 方法触发响应式；")]),t._v(" "),e("li",[t._v("如果目标是对象，会先判读属性是否存在、对象是否是响应式，最终如果要对属性进行响应式处理，则是通过调用 "),e("code",[t._v("defineReactive")]),t._v(" 方法进行响应式处理（"),e("code",[t._v("defineReactive")]),t._v(" 方法就是 "),e("code",[t._v("Vue")]),t._v(" 在初始化对象时，给对象属性采用 "),e("code",[t._v("Object.defineProperty")]),t._v(" 动态添加 "),e("code",[t._v("getter")]),t._v(" 和 "),e("code",[t._v("setter")]),t._v(" 的功能所调用的方法）")])]),t._v(" "),e("h2",{attrs:{id:"_23、虚拟-dom-概念及实现原理？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_23、虚拟-dom-概念及实现原理？"}},[t._v("#")]),t._v(" 23、虚拟 DOM 概念及实现原理？")]),t._v(" "),e("h3",{attrs:{id:"_1、什么是虚拟-dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是虚拟-dom"}},[t._v("#")]),t._v(" 1、什么是虚拟 DOM")]),t._v(" "),e("p",[e("code",[t._v("Virtual DOM")]),t._v("(虚拟 "),e("code",[t._v("DOM")]),t._v(")，是由普通的 "),e("code",[t._v("JS")]),t._v(" 对象来描述 "),e("code",[t._v("DOM")]),t._v(" 对象，因为不是真实的 "),e("code",[t._v("DOM")]),t._v(" 对象，所以叫 "),e("code",[t._v("Virtual DOM")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"_2、为什么要使用虚拟-dom？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、为什么要使用虚拟-dom？"}},[t._v("#")]),t._v(" 2、为什么要使用虚拟 DOM？")]),t._v(" "),e("p",[t._v("真实 "),e("code",[t._v("DOM")]),t._v(" 成员非常的多，对于一个简单的 "),e("code",[t._v("div")]),t._v(" 打印的真实的 "),e("code",[t._v("DOM")]),t._v(" 节点的成员非常多，而对于虚拟 "),e("code",[t._v("DOM")]),t._v(" 节点只是用简单的 "),e("code",[t._v("JS")]),t._v(" 对象表示，极大的节省资源。"),e("br"),t._v("\n因此创建一个虚拟 "),e("code",[t._v("DOM")]),t._v(" 的成本比创建一个真实 "),e("code",[t._v("DOM")]),t._v(" 的成本小很多，因此可以极大的节省成本。")]),t._v(" "),e("ul",[e("li",[t._v("手动操作 "),e("code",[t._v("DOM")]),t._v(" 比较麻烦，还需要考虑浏览器兼容问题，虽然 "),e("code",[t._v("jQuery")]),t._v(" 等库简化 "),e("code",[t._v("DOM")]),t._v(" 操作，但是随着项目的复杂 "),e("code",[t._v("DOM")]),t._v(" 操作复杂提升")]),t._v(" "),e("li",[t._v("为了简化 "),e("code",[t._v("DOM")]),t._v(" 的复杂操作于是出现了各种 "),e("code",[t._v("MVVM")]),t._v(" 框架，"),e("code",[t._v("MVVM")]),t._v(" 框架解决了视图和状态的同步问题")]),t._v(" "),e("li",[e("code",[t._v("Virtual DOM")]),t._v(" 的好处是当前状态改变时不需要立即更新 "),e("code",[t._v("DOM")]),t._v("，只需要创建一个虚拟树来描述 "),e("code",[t._v("DOM")]),t._v("，"),e("code",[t._v("Virtual DOM")]),t._v(" 内部将弄清楚是如何有效("),e("code",[t._v("diff")]),t._v(")的更新 "),e("code",[t._v("DOM")])]),t._v(" "),e("li",[t._v("参考 "),e("code",[t._v("github")]),t._v(" 上 "),e("code",[t._v("virtual-dom")]),t._v(" 的描述\n"),e("ul",[e("li",[t._v("虚拟 "),e("code",[t._v("DOM")]),t._v(" 可以维护程序的状态，跟踪上一次的状态")]),t._v(" "),e("li",[t._v("通过比较前后两次状态的差异更新真实 "),e("code",[t._v("DOM")])])])])]),t._v(" "),e("h3",{attrs:{id:"_3、虚拟-dom-的作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、虚拟-dom-的作用"}},[t._v("#")]),t._v(" 3、虚拟 DOM 的作用")]),t._v(" "),e("ul",[e("li",[t._v("维护视图和状态的关系")]),t._v(" "),e("li",[t._v("复杂视图情况下提升渲染性能")]),t._v(" "),e("li",[t._v("除了渲染 "),e("code",[t._v("DOM")]),t._v(" 以外，还可以实现 "),e("code",[t._v("SSR(Nuxt.js/Next.js)")]),t._v("，原生应用("),e("code",[t._v("Weex/React Native")]),t._v(")、小程序("),e("code",[t._v("mpvue/uni-app")]),t._v(")")]),t._v(" "),e("li",[t._v("真实 "),e("code",[t._v("DOM")]),t._v(" 的属性很多，创建 "),e("code",[t._v("DOM")]),t._v(" 节点开销很大; 虚拟 "),e("code",[t._v("DOM")]),t._v(" 是由普通的 "),e("code",[t._v("JS")]),t._v(" 对象来描述 "),e("code",[t._v("DOM")]),t._v(" 对象，描述属性并不需要很多，创建开销很小")])]),t._v(" "),e("p",[e("strong",[t._v("灵魂发问:使用了虚拟DOM就一定会比直接渲染真实DOM快吗?")])]),t._v(" "),e("p",[t._v("举例:当一个节点变更时 "),e("code",[t._v("DOMA->DOMB")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(314),alt:""}})]),t._v(" "),e("p",[t._v("答：示例 "),e("code",[t._v("1")]),t._v(" 是创建一个 "),e("code",[t._v("DOMB")]),t._v(" 然后替换掉 "),e("code",[t._v("DOMA")]),t._v("; 示例 "),e("code",[t._v("2")]),t._v(" 去创建虚拟 "),e("code",[t._v("DOM+DIFF")]),t._v(" 算法比对发现 "),e("code",[t._v("DOMB")]),t._v(" 跟 "),e("code",[t._v("DOMA")]),t._v(" 不是相同的节点,最后还是创建一个 "),e("code",[t._v("DOMB")]),t._v(" 然后替换掉 "),e("code",[t._v("DOMA")]),t._v("; 可以明显看出 "),e("code",[t._v("1")]),t._v(" 是更快的,同样的结果, "),e("code",[t._v("2")]),t._v(" 还要去创建虚拟 "),e("code",[t._v("DOM+DIFF")]),t._v(" 算啊对比 所以说使用虚拟DOM比直接操作真实 "),e("code",[t._v("DOM")]),t._v(" 就一定要快这个说法是错误的,不严谨的。")]),t._v(" "),e("p",[t._v("举例:当 "),e("code",[t._v("DOM")]),t._v(" 树里面的某个子节点的内容变更时:")]),t._v(" "),e("p",[e("img",{attrs:{src:a(315),alt:""}})]),t._v(" "),e("p",[t._v("当一些复杂的节点,比如说一个父节点里面有多个子节点,当只是一个子节点的内容发生了改变,那么我们没有必要像示例1重新去渲染这个 "),e("code",[t._v("DOM")]),t._v(" 树,这个时候虚拟 "),e("code",[t._v("DOM+DIFF")]),t._v(" 算法就能够得到很好的体现,我们通过示例 "),e("code",[t._v("2")]),t._v(" 使用虚拟 "),e("code",[t._v("DOM+Diff")]),t._v(" 算法去找出改变了的子节点更新它的内容就可以了")]),t._v(" "),e("p",[e("strong",[t._v("总结:")]),e("br"),t._v("\n复杂视图情况下提升渲染性能,因为虚拟 "),e("code",[t._v("DOM+Diff")]),t._v(" 算法可以精准找到 "),e("code",[t._v("DOM")]),t._v(" 树变更的地方,减少 "),e("code",[t._v("DOM")]),t._v(" 的操作(重排重绘)")]),t._v(" "),e("p",[e("strong",[t._v("Virtual DOM 库：")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Snabbdom")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Vue 2.x")]),t._v(" 内部使用的"),e("code",[t._v("Virtual DOM")]),t._v(" 就是改造的 "),e("code",[t._v("Snabbdom")])]),t._v(" "),e("li",[t._v("大约 "),e("code",[t._v("200 SLOC (single line of code)")])]),t._v(" "),e("li",[t._v("通过模块可扩展")]),t._v(" "),e("li",[t._v("源码使用 "),e("code",[t._v("TypeScript")]),t._v(" 开发")]),t._v(" "),e("li",[t._v("最快的 "),e("code",[t._v("Virtual DOM")]),t._v(" 之一")])])]),t._v(" "),e("li",[e("code",[t._v("virtual-dom")])])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 真实 DOM")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" element "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" element"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非常多属性")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虚拟 DOM")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    children"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    text"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello Virtual DOM'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    elm"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("虚拟 `DOM` 的实现原理主要包括以下 `3` 部分：")]),t._v(" "),e("ol",[e("li",[t._v("用 "),e("code",[t._v("JavaScript")]),t._v(" 对象模拟真实 "),e("code",[t._v("DOM")]),t._v(" 树，对真实 "),e("code",[t._v("DOM")]),t._v(" 进行抽象；")]),t._v(" "),e("li",[e("code",[t._v("diff")]),t._v(" 算法 — 比较两棵虚拟 "),e("code",[t._v("DOM")]),t._v(" 树的差异；")]),t._v(" "),e("li",[e("code",[t._v("pach")]),t._v(" 算法 — 将两个虚拟 "),e("code",[t._v("DOM")]),t._v(" 对象的差异应用到真正的 "),e("code",[t._v("DOM")]),t._v(" 树。")])])]),t._v(" "),e("h3",{attrs:{id:"_4、diff-算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、diff-算法"}},[t._v("#")]),t._v(" 4、diff 算法")]),t._v(" "),e("ul",[e("li",[t._v("把新节点中变化的内容渲染到真实 "),e("code",[t._v("DOM")]),t._v(",最后返回新节点作为下一次处理的旧节点(核心)")]),t._v(" "),e("li",[t._v("当组件创建和更新时，"),e("code",[t._v("vue")]),t._v(" 会执行内部的 "),e("code",[t._v("update")]),t._v(" 函数，该函数使用 "),e("code",[t._v("render")]),t._v(" 函数生成的虚拟 "),e("code",[t._v("dom")]),t._v(" 树，将新旧两树进行对比，找到差异点，最终更新到真实 "),e("code",[t._v("dom")])]),t._v(" "),e("li",[t._v("对比差异的过程叫 "),e("code",[t._v("diff")]),t._v(" 算法")]),t._v(" "),e("li",[t._v("在对比时，"),e("code",[t._v("vue")]),t._v(" 采用 "),e("strong",[t._v("深度优先、同级比较")]),t._v(" 的方式进行比对。同级比较就是说它不会跨越结构进行比较")]),t._v(" "),e("li",[t._v("首先，在判断两个节点是否相同时，"),e("code",[t._v("vue")]),t._v(" 是通过虚拟节点的 "),e("code",[t._v("key")]),t._v(" 和 "),e("code",[t._v("sel")]),t._v(" 来进行判断的")]),t._v(" "),e("li",[t._v("如果不是相同节点，删除之前的内容，重新渲染")]),t._v(" "),e("li",[t._v("如果是相同节点，再判断 "),e("code",[t._v("VNode")]),t._v(" 是否有 "),e("code",[t._v("text")]),t._v("，并且和 "),e("code",[t._v("oldVnode")]),t._v(" 的 "),e("code",[t._v("text")]),t._v(" 不同时，直接更新文本内容")]),t._v(" "),e("li",[t._v("如果新的 "),e("code",[t._v("VNode")]),t._v(" 有 "),e("code",[t._v("children")]),t._v(",判断子节点是否有变化( "),e("code",[t._v("updateChildren")]),t._v(",最麻烦,最难实现)，有以下三种情况：\n"),e("ul",[e("li",[t._v("只有新节点有 "),e("code",[t._v("children")]),t._v("，则添加所有的子节点")]),t._v(" "),e("li",[t._v("只有老节点有 "),e("code",[t._v("children")]),t._v("，移除所有的老节点")]),t._v(" "),e("li",[t._v("新老节点都有 "),e("code",[t._v("children")]),t._v(" 且不相等，则需要对比子节点并且更新子节点的差异，有以下五种情况：\n"),e("ul",[e("li",[e("code",[t._v("oldStartVnode/newStartVnode")]),t._v(" (旧开始节点/新开始节点)相同\n"),e("ul",[e("li",[t._v("首先判断是否相同节点,找出两者之间的差异,结束一次循环，并进行相应的移位 "),e("code",[t._v("oldStartIdx++/newStartIdx++")])])])]),t._v(" "),e("li",[e("code",[t._v("oldEndVnode/newEndVnode")]),t._v(" (旧结束节点/新结束节点)相同\n"),e("ul",[e("li",[t._v("首先判断是否相同节点)，找出两者之间的差异,结束一次循环，并进行相应的移位 "),e("code",[t._v("oldEndIdx--/newEndIdx--")])])])]),t._v(" "),e("li",[e("code",[t._v("oldStartVnode/newEndVnode")]),t._v(" (旧开始节点/新结束节点)相同\n"),e("ul",[e("li",[t._v("判断是否相同节点，找出两者之间的差异,将 "),e("code",[t._v("oldCh[oldStartIdx]")]),t._v(" 对应的真实 "),e("code",[t._v("dom")]),t._v(" 位移到 "),e("code",[t._v("oldCh[oldEndIdx]")]),t._v(" 对应的真实 "),e("code",[t._v("dom")]),t._v(" 后，并进行相应的移位 "),e("code",[t._v("oldStartIdx++/newEndIdx--")]),t._v(";")])])]),t._v(" "),e("li",[e("code",[t._v("oldEndVnode/newStartVnode")]),t._v(" (旧结束节点/新开始节点)相同\n"),e("ul",[e("li",[t._v("判断是否相同节点,找出两者之间的差异,将 "),e("code",[t._v("oldCh[oldEndIdx]")]),t._v(" 对应的真实 "),e("code",[t._v("dom")]),t._v(" 位移到 "),e("code",[t._v("oldCh[oldStartIdx]")]),t._v(" 对应的真实 "),e("code",[t._v("dom")]),t._v(" 前, 并进行相应的移位 "),e("code",[t._v("oldEndIdx--/newStartIdx++")]),t._v(";")])])]),t._v(" "),e("li",[t._v("特殊情况当 "),e("code",[t._v("1,2,3,4")]),t._v("的情况都不符合，则在 "),e("code",[t._v("oldVnodes")]),t._v(" 里面寻找跟 "),e("code",[t._v("newStartVnode")]),t._v(" 一样的节点然后位移到 "),e("code",[t._v("oldCh[oldStartIdx]")]),t._v(" 对应的真实 "),e("code",[t._v("dom")]),t._v(" 前,若没有找到，则则创建一个与 "),e("code",[t._v("newCh[newStartIdx]")]),t._v(" 节点对应的真实 "),e("code",[t._v("dom")]),t._v(" 插入到 "),e("code",[t._v("oldCh[oldStartIdx]")]),t._v(" 对应的真实 "),e("code",[t._v("dom")]),t._v(" 前, 并进行相应的移位 "),e("code",[t._v("newStartIdx++")])])])])])]),t._v(" "),e("li",[t._v("结束循环的收尾工作("),e("code",[t._v("oldStartIdx>oldEndIdx")]),t._v(" || "),e("code",[t._v("newStartIdx>newEndIdx")]),t._v(")\n"),e("ul",[e("li",[t._v("新节点的所有子节点先遍历完("),e("code",[t._v("newStartIdx>newEndIdx")]),t._v("),循环结束")]),t._v(" "),e("li",[t._v("新节点的所有子节点遍历结束就是把没有对应相同节点的子节点删除")]),t._v(" "),e("li",[t._v("旧节点的所有子节点先遍历完("),e("code",[t._v("oldStartIdx>oldEndIdx")]),t._v("),循环结束")]),t._v(" "),e("li",[t._v("旧节点的所有子节点遍历结束就是在多出来的子节点插入到旧节点结束节点前;(源码:"),e("code",[t._v("newCh[newEndIdx + 1].elm")]),t._v("),就是对应的旧结束节点的真实 "),e("code",[t._v("dom")]),t._v(","),e("code",[t._v("newEndIdx+1")]),t._v("是因为在匹配到相同的节点需要 "),e("code",[t._v("-1")]),t._v(" ,所以需要加回来就是结束节点")])])]),t._v(" "),e("li",[t._v("在对比其子节点数组时，"),e("code",[t._v("vue")]),t._v(" 对每个子节点数组使用了两个指针，分别指向头尾，然后不断向中间靠拢来进行对比，这样做的目的是尽量复用真实 "),e("code",[t._v("dom")]),t._v("，尽量少的销毁和创建真实 "),e("code",[t._v("dom")]),t._v("。如果发现相同，则进入和根节点一样的对比流程，如果发现不同，则移动真实 "),e("code",[t._v("dom")]),t._v(" 到合适的位置。")]),t._v(" "),e("li",[t._v("这样一直递归的遍历下去，直到整棵树完成对比")])]),t._v(" "),e("h2",{attrs:{id:"_24、vue-项目优化？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_24、vue-项目优化？"}},[t._v("#")]),t._v(" 24、Vue 项目优化？")]),t._v(" "),e("h3",{attrs:{id:"_1、代码层面的优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、代码层面的优化"}},[t._v("#")]),t._v(" 1、代码层面的优化")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[e("code",[t._v("v-if")]),t._v(" 和 "),e("code",[t._v("v-show")]),t._v(" 区分使用场景")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[e("code",[t._v("computed")]),t._v(" 和 "),e("code",[t._v("watch")]),t._v("  区分使用场景")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[e("code",[t._v("v-for")]),t._v(" 遍历必须为每个 "),e("code",[t._v("item")]),t._v(" 添加 "),e("code",[t._v("key")]),t._v("，且避免同时使用 "),e("code",[t._v("v-if")])])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[t._v("长列表性能优化")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"5"}},[e("li",[t._v("事件的销毁")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"6"}},[e("li",[t._v("图片懒加载")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"7"}},[e("li",[t._v("路由懒加载")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"8"}},[e("li",[t._v("第三方插件的按需引入")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"9"}},[e("li",[t._v("优化无限列表性能")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"10"}},[e("li",[t._v("服务端渲染 "),e("code",[t._v("SSR")]),t._v(" 或者预渲染")])])])]),t._v(" "),e("h3",{attrs:{id:"_2、webpack-层面的优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、webpack-层面的优化"}},[t._v("#")]),t._v(" 2、Webpack 层面的优化")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[e("code",[t._v("Webpack")]),t._v(" 对图片进行压缩")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("减少 "),e("code",[t._v("ES6")]),t._v(" 转为 "),e("code",[t._v("ES5")]),t._v(" 的冗余代码")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[t._v("提取公共代码")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[t._v("模板预编译")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"5"}},[e("li",[t._v("提取组件的 "),e("code",[t._v("CSS")])])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"6"}},[e("li",[t._v("优化 "),e("code",[t._v("SourceMap")])])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"7"}},[e("li",[t._v("构建结果输出分析")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"8"}},[e("li",[e("code",[t._v("Vue")]),t._v(" 项目的编译优化")])])])]),t._v(" "),e("h3",{attrs:{id:"_3、基础的-web-技术的优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、基础的-web-技术的优化"}},[t._v("#")]),t._v(" 3、基础的 Web 技术的优化")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[t._v("开启 "),e("code",[t._v("gzip")]),t._v(" 压缩")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("浏览器缓存")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[e("code",[t._v("CDN")]),t._v(" 的使用")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[t._v("使用 "),e("code",[t._v("Chrome Performance")]),t._v(" 查找性能瓶颈")])])])]),t._v(" "),e("h2",{attrs:{id:"_25、vue3-0-特性的了解？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_25、vue3-0-特性的了解？"}},[t._v("#")]),t._v(" 25、vue3.0 特性的了解？")]),t._v(" "),e("p",[e("code",[t._v("Vue 3.0")]),t._v(" 的目标是让 "),e("code",[t._v("Vue")]),t._v(" 核心变得更小、更快、更强大，因此 "),e("code",[t._v("Vue 3.0")]),t._v(" 增加以下这些新特性：")]),t._v(" "),e("h3",{attrs:{id:"_1、监测机制的改变"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、监测机制的改变"}},[t._v("#")]),t._v(" 1、监测机制的改变")]),t._v(" "),e("p",[e("code",[t._v("Vue3.0")]),t._v(" 将带来基于代理 "),e("code",[t._v("Proxy")]),t._v(" 的 "),e("code",[t._v("observer")]),t._v(" 实现，提供全语言覆盖的反应性跟踪。这消除了 "),e("code",[t._v("Vue2.0")]),t._v("当中基于 "),e("code",[t._v("Object.defineProperty")]),t._v(" 的实现所存在的很多限制：")]),t._v(" "),e("ol",[e("li",[t._v("只能监测属性，不能监测对象")]),t._v(" "),e("li",[t._v("检测属性的添加和删除；")]),t._v(" "),e("li",[t._v("检测数组索引和长度的变更；")]),t._v(" "),e("li",[t._v("支持 "),e("code",[t._v("Map、Set、WeakMap")]),t._v(" 和 "),e("code",[t._v("WeakSet")]),t._v("。")])]),t._v(" "),e("h3",{attrs:{id:"_2、新的-observer-特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、新的-observer-特性"}},[t._v("#")]),t._v(" 2、新的 observer 特性")]),t._v(" "),e("ol",[e("li",[t._v("用于创建 "),e("code",[t._v("observable")]),t._v(" 的公开 "),e("code",[t._v("API")]),t._v("。这为中小规模场景提供了简单轻量级的跨组件状态管理解决方案。")]),t._v(" "),e("li",[t._v("默认采用惰性观察。在 "),e("code",[t._v("2.x")]),t._v(" 中，不管反应式数据有多大，都会在启动时被观察到。如果你的数据集很大，这可能会在应用启动时带来明显的开销。在 "),e("code",[t._v("3.x")]),t._v(" 中，只观察用于渲染应用程序最初可见部分的数据。")]),t._v(" "),e("li",[t._v("更精确的变更通知。在 "),e("code",[t._v("2.x")]),t._v(" 中，通过 "),e("code",[t._v("Vue.set")]),t._v(" 强制添加新属性将导致依赖于该对象的 "),e("code",[t._v("watcher")]),t._v(" 收到变更通知。在 "),e("code",[t._v("3.x")]),t._v(" 中，只有依赖于特定属性的 "),e("code",[t._v("watcher")]),t._v(" 才会收到通知。")]),t._v(" "),e("li",[t._v("不可变的 "),e("code",[t._v("observable")]),t._v("：我们可以创建值的“不可变”版本（即使是嵌套属性），除非系统在内部暂时将其“解禁”。这个机制可用于冻结 "),e("code",[t._v("prop")]),t._v(" 传递或 "),e("code",[t._v("Vuex")]),t._v(" 状态树以外的变化。")]),t._v(" "),e("li",[t._v("更好的调试功能：我们可以使用新的 "),e("code",[t._v("renderTracked")]),t._v(" 和 "),e("code",[t._v("renderTriggered")]),t._v(" 钩子精确地跟踪组件在什么时候以及为什么重新渲染。")])]),t._v(" "),e("h3",{attrs:{id:"_3、模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、模板"}},[t._v("#")]),t._v(" 3、模板")]),t._v(" "),e("p",[t._v("模板方面没有大的变更，只改了作用域插槽，"),e("code",[t._v("2.x")]),t._v(" 的机制导致作用域插槽变了，父组件会重新渲染，而 "),e("code",[t._v("3.0")]),t._v(" 把作用域插槽改成了函数的方式，这样只会影响子组件的重新渲染，提升了渲染的性能。\n同时，对于 "),e("code",[t._v("render")]),t._v(" 函数的方面，"),e("code",[t._v("vue3.0")]),t._v(" 也会进行一系列更改来方便习惯直接使用 "),e("code",[t._v("api")]),t._v(" 来生成 "),e("code",[t._v("vdom")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"_26、vue3-0-比起-vue2-x-的优势？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_26、vue3-0-比起-vue2-x-的优势？"}},[t._v("#")]),t._v(" 26、Vue3.0 比起 Vue2.x 的优势？")]),t._v(" "),e("h3",{attrs:{id:"_1、性能比2-x快1-2～2倍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、性能比2-x快1-2～2倍"}},[t._v("#")]),t._v(" 1、性能比2.x快1.2～2倍")]),t._v(" "),e("h4",{attrs:{id:"diff算法的优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diff算法的优化"}},[t._v("#")]),t._v(" diff算法的优化")]),t._v(" "),e("p",[t._v("在vue2中，虚拟dom是全量比较的。")]),t._v(" "),e("p",[t._v("在vue3中，增加了静态标记PatchFlag。在创建vnode的时候，会根据vnode的内容是否可以变化，为其添加静态标记PatchFlag。diff的时候，只会比较有PatchFlag的节点。PatchFlag是有类型的，比如一个可变化文本节点，会将其添加PatchFlag枚举值为TEXT的静态标记。这样在diff的时候，只需比对文本内容。需要比对的内容更少了。PatchFlag还有动态class、动态style、动态属性、动态key属性等枚举值。")]),t._v(" "),e("h4",{attrs:{id:"render阶段的静态提升（render阶段指生成虚拟dom树的阶段）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#render阶段的静态提升（render阶段指生成虚拟dom树的阶段）"}},[t._v("#")]),t._v(" render阶段的静态提升（render阶段指生成虚拟dom树的阶段）")]),t._v(" "),e("p",[t._v("在vue2中，一旦检查到数据变化，就会re-render组件，所有的vnode都会重新创建一遍，形成新的vdom树。")]),t._v(" "),e("p",[t._v("在vue3中，对于不参与更新的vnode，会做静态提升，只会被创建一次，在re-render时直接复用。")]),t._v(" "),e("p",[t._v("静态提升可以理解为第一次render不参与更新的vnode节点的时候，保存它们的引用。re-render新vdom树时，直接拿它们的引用过来即可，无需重新创建。")]),t._v(" "),e("h4",{attrs:{id:"事件侦听缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件侦听缓存"}},[t._v("#")]),t._v(" 事件侦听缓存")]),t._v(" "),e("p",[t._v('在vue2中，我们写的@click="onClick"也是被当作动态属性，diff的时候也要对比。但我们知道它不会变化，比如变成@click="onClick2"，绑定别的值。')]),t._v(" "),e("p",[t._v("在vue3中，如果事件是不会变化的，会将onClick缓存起来（跟静态提升达到的效果类似），该节点也不会被标记上PatchFlag（也就是无需更新的节点）。这样在render和diff两个阶段，事件侦听属性都节约了不必要的性能消耗。")]),t._v(" "),e("p",[t._v("我曾经维护过一个拥有很庞大dom树的页面。由于节点非常多，无需参与更新的节点也很多，使用vue2的情况下，在render和diff两个阶段，消费了很多性能，如果当时有vue3的话，我想性能会被优化很多。")]),t._v(" "),e("h4",{attrs:{id:"减少创建组件实例的开销"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#减少创建组件实例的开销"}},[t._v("#")]),t._v(" 减少创建组件实例的开销")]),t._v(" "),e("p",[t._v("vue2.x每创建一个实例，在this上要暴露data、props、computed这些，都是靠Object.defineProperty去定义的。这部分操作还是挺费时的。")]),t._v(" "),e("p",[t._v("vue3.0中基于Proxy，减少了创建组件实例的性能开销。")]),t._v(" "),e("h3",{attrs:{id:"_2、按需编译，体积比vue2-x更小（tree-shaking）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、按需编译，体积比vue2-x更小（tree-shaking）"}},[t._v("#")]),t._v(" 2、按需编译，体积比Vue2.x更小（Tree shaking）")]),t._v(" "),e("p",[t._v("在vue3中，可以如下面这样引用vue的功能函数，如果你的项目没有用到watch，那编译时就会把tree shaking掉。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" computed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" watch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextTick "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("利用的就是 ES6 模块系统import/export。")]),t._v(" "),e("h3",{attrs:{id:"_3、compostion-api-组合api-注入api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、compostion-api-组合api-注入api"}},[t._v("#")]),t._v(" 3、Compostion API: 组合API/注入API")]),t._v(" "),e("p",[t._v("这里要说到代码的组织方式，传统的网页是html/css/javascript（结构/样式/逻辑）分离。vue/react通过组件化的方式，将联系紧密的结构/样式/逻辑放在一起，有利于代码的维护。")]),t._v(" "),e("p",[t._v("compostion api更进一步，着力于JavaScript（逻辑）部分，将逻辑相关的代码放在一起，近而有利于代码的维护。")]),t._v(" "),e("p",[t._v("在vue2的组件内，使用的是Option API风格(data/methods/mounted)来组织的代码，这样会让逻辑分散，举个例子就是我们完成一个计数器功能，要在data里声明变量，在methods定义响应函数，在mounted里初始化变量，如果在一个功能比较多、代码量比较大的组件里，你要维护这样一个功能，就需要在data/methods/mounted反复的切换到对应位置，然后进行代码的更改。")]),t._v(" "),e("p",[t._v("在vue3中，使用setup函数。如下所示跟count相关的逻辑，都放到counter.js文件里，跟todo相关的逻辑放到todos.js里。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" useCounter "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./counter'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" useTodo "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./todos'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" todos"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addTodo "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useTodo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("add"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useCounter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" todos"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addTodo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("add"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[t._v("在我看来这就是Compostion API最大的特点，以功能为单位的代码组织方式。同时它可以让代码更易重用。")]),t._v(" "),e("p",[t._v("说到重用，Compostion API的方式也比mixin的方式好很多，你可以清楚的看到组件使用的数据和方法来自哪个模块，而mixin进组件的功能，常常会让我们困惑此功能来自哪个mixin。")]),t._v(" "),e("h3",{attrs:{id:"_4、更好的ts支持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、更好的ts支持"}},[t._v("#")]),t._v(" 4、更好的TS支持")]),t._v(" "),e("p",[t._v("vue2不适合使用ts，原因在于vue2的Option API风格。options是个简单对象，而ts是一种类型系统、面向对象的语法。两者有点不匹配。")]),t._v(" "),e("p",[t._v("在vue2结合ts的具体实践中，要用 vue-class-component 强化 vue 组件，让 Script 支持 TypeScript 装饰器，用 vue-property-decorator 来增加更多结合 Vue 特性的装饰器，最终搞的ts的组件写法和js的组件写法差别挺大。")]),t._v(" "),e("p",[t._v("在vue3中，量身打造了defineComponent函数，使组件在ts下，更好的利用参数类型推断 。Composition API 代码风格中，比较有代表性的api就是 ref 和 reactive，也很好的支持了类型声明。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" defineComponent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Component "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineComponent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  props"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    success"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    student"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" PropType"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Student"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      required"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" year "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" month "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ref"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" number"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'9'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    month"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" year"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => Property 'split' does not exist on type 'number'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("h3",{attrs:{id:"_5、自定义渲染api（custom-renderer-api）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、自定义渲染api（custom-renderer-api）"}},[t._v("#")]),t._v(" 5、自定义渲染API（Custom Renderer API）")]),t._v(" "),e("h4",{attrs:{id:"vue2-x架构问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue2-x架构问题"}},[t._v("#")]),t._v(" vue2.x架构问题")]),t._v(" "),e("p",[t._v("vue2.x最开始支持运行在浏览器中，渲染到浏览器的dom上，随着vue的流行，出现了weex和myvue。")]),t._v(" "),e("ul",[e("li",[t._v("weex：移动端跨平台方案，需要渲染到移动设备。weex被写在vue原项目里，缺点是这使vue原项目更大了，也不是通用解决方案。")]),t._v(" "),e("li",[t._v("myvue：小程序上使用，需要渲染到小程序框架上。myvue是单独fork一份源代码进行更改，缺点也非常明显，myvue中vue的版本跟官方版本从fork的那一刻开始，就要开始不一致了。")])]),t._v(" "),e("p",[t._v("vue2.x项目架构对于这种渲染到不同平台不太友好，vue3.0推出了自定义渲染API解决了该问题。")]),t._v(" "),e("p",[t._v("下面我们先看vue2和vue3的入口写法有所不同：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./App.vue'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("h")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("$mount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createApp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/App"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createApp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[t._v("vue官方实现的 createApp 会给我们的 template 映射生成 html 代码，但是要是你不想渲染生成到 html ，而是要渲染生成到 canvas 之类的不是html的代码的时候，那就需要用到 Custom Renderer API 来定义自己的 render 渲染生成函数了。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 你自己实现一个createApp，比如是渲染到canvas的。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createApp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./runtime-render"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/App"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根组件")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createApp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("有了Custom Renderer API，如weex和myvue这类方案的问题就得到了完美解决。只需重写createApp即可。")]),t._v(" "),e("h3",{attrs:{id:"_6、更先进的组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、更先进的组件"}},[t._v("#")]),t._v(" 6、更先进的组件")]),t._v(" "),e("h4",{attrs:{id:"fragment组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fragment组件"}},[t._v("#")]),t._v(" Fragment组件")]),t._v(" "),e("p",[t._v("// vue2是不允许这样写的，组件必须有一个跟节点，现在可以这样写，vue将为我们创建一个虚拟的Fragment节点。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("World"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("这样写有何好处呢？一是如果根节点不是必要的，无需创建了，减少了节点数。二是Fragment节点是虚拟的，不会DOM树中呈现。")]),t._v(" "),e("h4",{attrs:{id:"suspense组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#suspense组件"}},[t._v("#")]),t._v(" Suspense组件")]),t._v(" "),e("div",{staticClass:"language-vue line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Suspense")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Suspended-component")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("#fallback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    Loading...\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Suspense")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("在Suspended-component完全渲染之前，备用内容会被显示出来。如果是异步组件，Suspense可以等待组件被下载，或者在设置函数中执行一些异步操作。")]),t._v(" "),e("h3",{attrs:{id:"_7、更快的开发体验（vite开发构建工具）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7、更快的开发体验（vite开发构建工具）"}},[t._v("#")]),t._v(" 7、更快的开发体验（vite开发构建工具）")]),t._v(" "),e("p",[t._v("在使用webpack作为开发构建工具时，npm run dev都要等一会，项目越大等的时间越长。热重载页有几秒的延迟，但是如果用vite来做vue3的开发构建工具，npm run dev 秒开，热重载也很快。这种开发体验真是很爽，拒绝等待。")]),t._v(" "),e("p",[t._v("vite的原理还是用了浏览器支持import关键字了，启动项目不用webpack构建工具先构建了，浏览器直接请求路由对应的代码文件，代理服务器针对单个文件进行编译并返回。如果请求的文件里还import了其他文件，同理浏览器继续发请求，代理服务器返回。就这样实现了npm run dev时无需编译，实时请求实时编译。")]),t._v(" "),e("p",[e("strong",[t._v("总结：")])]),t._v(" "),e("p",[t._v("其他的，数据监听方式变成了Proxy，消除了Object.defineProperty现有的限制（例如无法检测新的属性添加），并提供更好的性能。")]),t._v(" "),e("p",[t._v("vue3解决了vue2的一些问题，大型应用的性能问题、ts支持不友好问题，自定义渲染API解决体系架构存在的问题，如果在vue3的基础上实现weex框架会好很多。也做出了很多优化，Compostion API让代码的组织形式更好。vite开发构建工具让开发体验更好，Tree shaking让包更小、性能更优。")]),t._v(" "),e("p",[t._v("总的来说vue3还是非常棒的，带来了很多非常好的新特性。")])])}],v=(a(316),a(0)),n=Object(v.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),e,!1,null,null,null);s.default=n.exports}}]);